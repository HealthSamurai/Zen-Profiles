{ns plan-net.v1.plannet-PractitionerRole,
 import
 #{aidbox-fx fhir aidbox plan-net.v1.network-reference
   plan-net.v1.via-intermediary plan-net.v1.newpatients
   plan-net.v1.contactpoint-availabletime plan-net.v1.qualification},
 PractitionerRole
 {:format :fhir,
  :zen/tags #{zen/schema aidbox/profile},
  :require #{:active},
  :type zen/map,
  :zen/desc
  "PractionerRole describes details about a provider, which can be a practitioner or an organization. When the provider is a practitioner, \nthere may be a relationship to an organization. A provider renders services to patients at a location. When the provider is a practitioner, there may also \nbe a relationship to an organization. Practitioner participation in healthcare provider insurance networks may be direct or through their role at an organization.",
  :resourceType "PractitionerRole",
  :keys
  {:availableTime {:confirms #{PractitionerRole.availableTime}},
   :meta {:confirms #{PractitionerRole.meta}},
   :specialty {:confirms #{PractitionerRole.specialty}},
   :notAvailable {:confirms #{PractitionerRole.notAvailable}},
   :implicitRules {:confirms #{PractitionerRole.implicitRules}},
   :organization {:confirms #{PractitionerRole.organization}},
   :resourceType
   {:type zen/string, :const {:value "PractitionerRole"}},
   :extension {:confirms #{PractitionerRole.extension}},
   :contained {:confirms #{PractitionerRole.contained}},
   :language {:confirms #{PractitionerRole.language}},
   :active {:confirms #{PractitionerRole.active}},
   :id {:confirms #{PractitionerRole.id}},
   :code {:confirms #{PractitionerRole.code}},
   :identifier {:confirms #{PractitionerRole.identifier}},
   :availabilityExceptions
   {:confirms #{PractitionerRole.availabilityExceptions}},
   :practitioner {:confirms #{PractitionerRole.practitioner}},
   :telecom {:confirms #{PractitionerRole.telecom}},
   :period {:confirms #{PractitionerRole.period}},
   :location {:confirms #{PractitionerRole.location}},
   :endpoint {:confirms #{PractitionerRole.endpoint}},
   :healthcareService
   {:confirms #{PractitionerRole.healthcareService}},
   :modifierExtension
   {:confirms #{PractitionerRole.modifierExtension}},
   :text {:confirms #{PractitionerRole.text}}},
  :severity "supported",
  :validation-type :open,
  :profile-definition
  "http://hl7.org/fhir/us/davinci-pdex-plan-net/StructureDefinition/plannet-PractitionerRole"},
 PractitionerRole.active
 {:confirms #{fhir/boolean},
  :zen/tags #{zen/schema},
  :zen/desc "Whether this practitioner role record is in active use.",
  :const {:value true}},
 PractitionerRole.availabilityExceptions
 {:zen/desc
  "A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.availableTime
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.availableTime.*}}},
 PractitionerRole.availableTime.*
 {:confirms #{fhir/BackboneElement},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc
  "A collection of times the practitioner is available or performing this role at the location and/or healthcareservice.",
  :keys
  {:extension {:confirms #{PractitionerRole.availableTime.extension}},
   :availableStartTime
   {:confirms #{PractitionerRole.availableTime.availableStartTime}},
   :availableEndTime
   {:confirms #{PractitionerRole.availableTime.availableEndTime}},
   :modifierExtension
   {:confirms #{PractitionerRole.availableTime.modifierExtension}},
   :id {:confirms #{PractitionerRole.availableTime.id}},
   :daysOfWeek
   {:confirms #{PractitionerRole.availableTime.daysOfWeek}},
   :allDay {:confirms #{PractitionerRole.availableTime.allDay}}}},
 PractitionerRole.availableTime.allDay
 {:zen/desc
  "Is this always available? (hence times are irrelevant) e.g. 24 hour service.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/boolean}},
 PractitionerRole.availableTime.availableEndTime
 {:zen/desc
  "The closing time of day. Note: If the AllDay flag is set, then this time is ignored.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/time}},
 PractitionerRole.availableTime.availableStartTime
 {:zen/desc
  "The opening time of day. Note: If the AllDay flag is set, then this time is ignored.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/time}},
 PractitionerRole.availableTime.daysOfWeek
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.availableTime.daysOfWeek.*}}},
 PractitionerRole.availableTime.daysOfWeek.*
 {aidbox-fx/valueset
  PractitionerRole.availableTime.daysOfWeek.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc
  "Indicates which days of the week are available between the start and end Times."},
 PractitionerRole.availableTime.daysOfWeek.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url "http://hl7.org/fhir/ValueSet/days-of-week"},
 PractitionerRole.availableTime.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.availableTime.extension.*}}},
 PractitionerRole.availableTime.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 PractitionerRole.availableTime.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.availableTime.modifierExtension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms #{PractitionerRole.availableTime.modifierExtension.*}}},
 PractitionerRole.availableTime.modifierExtension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."},
 PractitionerRole.code
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.code.*}}},
 PractitionerRole.code.*
 {aidbox-fx/valueset PractitionerRole.code.valueset,
  :confirms #{fhir/CodeableConcept},
  :zen/tags #{zen/schema},
  :zen/desc
  "Roles which this practitioner is authorized to perform for the organization."},
 PractitionerRole.code.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url
  "http://hl7.org/fhir/us/davinci-pdex-plan-net/ValueSet/PractitionerRoleVS"},
 PractitionerRole.contained
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.contained.*}}},
 PractitionerRole.contained.*
 {:confirms #{fhir/Resource},
  :zen/tags #{zen/schema},
  :zen/desc
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."},
 PractitionerRole.endpoint
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.endpoint.*}}},
 PractitionerRole.endpoint.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Technical endpoints providing access to services operated for the practitioner with this role."},
 PractitionerRole.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.extension.*}},
  :slicing
  {:slices
   {"qualification"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen {:confirms #{PractitionerRole.extension:qualification.*}}},
     :schema {:confirms #{PractitionerRole.extension:qualification}}},
    "newpatients"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen {:confirms #{PractitionerRole.extension:newpatients.*}}},
     :schema {:confirms #{PractitionerRole.extension:newpatients}}},
    "network-reference"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen
      {:confirms #{PractitionerRole.extension:network-reference.*}}},
     :schema
     {:confirms #{PractitionerRole.extension:network-reference}}}}}},
 PractitionerRole.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc "An Extension"},
 PractitionerRole.extension:network-reference
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms #{PractitionerRole.extension:network-reference.*}}},
 PractitionerRole.extension:network-reference.*
 {:confirms #{plan-net.v1.network-reference/Extension},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc "Optional Extension Element - found in all resources."},
 PractitionerRole.extension:newpatients
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.extension:newpatients.*}}},
 PractitionerRole.extension:newpatients.*
 {:confirms #{plan-net.v1.newpatients/Extension},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc "An Extension"},
 PractitionerRole.extension:qualification
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.extension:qualification.*}}},
 PractitionerRole.extension:qualification.*
 {:confirms #{plan-net.v1.qualification/Extension},
  :zen/tags #{zen/schema},
  :require #{:extension :url},
  :type zen/map,
  :zen/desc "Optional Extension Element - found in all resources.",
  :keys
  {:valueBase64Binary {:confirms #{fhir/base64Binary}},
   :valueAge {:confirms #{fhir/Age}},
   :valueParameterDefinition {:confirms #{fhir/ParameterDefinition}},
   :valueTiming {:confirms #{fhir/Timing}},
   :valueCode {:confirms #{fhir/code}},
   :valueReference {:confirms #{fhir/Reference}},
   :valueContributor {:confirms #{fhir/Contributor}},
   :valueContactDetail {:confirms #{fhir/ContactDetail}},
   :valueUri {:confirms #{fhir/uri}},
   :valueUsageContext {:confirms #{fhir/UsageContext}},
   :valueTime {:confirms #{fhir/time}},
   :valueDecimal {:confirms #{fhir/decimal}},
   :valueCanonical {:confirms #{fhir/canonical}},
   :valueMarkdown {:confirms #{fhir/markdown}},
   :valueIdentifier {:confirms #{fhir/Identifier}},
   :valueTriggerDefinition {:confirms #{fhir/TriggerDefinition}},
   :valueQuantity {:confirms #{fhir/Quantity}},
   :valueCount {:confirms #{fhir/Count}},
   :valueString {:confirms #{fhir/string}},
   :valueRatio {:confirms #{fhir/Ratio}},
   :valueBoolean {:confirms #{fhir/boolean}},
   :valueInstant {:confirms #{fhir/instant}},
   :valueDateTime {:confirms #{fhir/dateTime}},
   :valueDate {:confirms #{fhir/date}},
   :valueDuration {:confirms #{fhir/Duration}},
   :valueDataRequirement {:confirms #{fhir/DataRequirement}},
   :valueMeta {:confirms #{fhir/Meta}},
   :valueMoney {:confirms #{fhir/Money}},
   :valueCoding {:confirms #{fhir/Coding}},
   :valueExpression {:confirms #{fhir/Expression}},
   :extension
   {:confirms #{PractitionerRole.extension:qualification.extension}},
   :valueSampledData {:confirms #{fhir/SampledData}},
   :id {:confirms #{PractitionerRole.extension:qualification.id}},
   :valueDosage {:confirms #{fhir/Dosage}},
   :valueContactPoint {:confirms #{fhir/ContactPoint}},
   :url {:confirms #{PractitionerRole.extension:qualification.url}},
   :valueCodeableConcept {:confirms #{fhir/CodeableConcept}},
   :valueAnnotation {:confirms #{fhir/Annotation}},
   :valuePeriod {:confirms #{fhir/Period}},
   :valueDistance {:confirms #{fhir/Distance}},
   :valueRange {:confirms #{fhir/Range}},
   :valueSignature {:confirms #{fhir/Signature}},
   :valueUuid {:confirms #{fhir/uuid}},
   :valueInteger {:confirms #{fhir/integer}},
   :valueHumanName {:confirms #{fhir/HumanName}},
   :valueUnsignedInt {:confirms #{fhir/unsignedInt}},
   :valueAttachment {:confirms #{fhir/Attachment}},
   :valueOid {:confirms #{fhir/oid}},
   :valueAddress {:confirms #{fhir/Address}},
   :valueRelatedArtifact {:confirms #{fhir/RelatedArtifact}},
   :valuePositiveInt {:confirms #{fhir/positiveInt}},
   :valueId {:confirms #{fhir/id}},
   :valueUrl {:confirms #{fhir/url}}},
  :exclusive-keys
  #{#{:valueBase64Binary :valueAge :valueParameterDefinition
      :valueTiming :valueCode :valueReference :valueContributor
      :valueContactDetail :valueUri :valueUsageContext :valueTime
      :valueDecimal :valueCanonical :valueMarkdown :valueIdentifier
      :valueTriggerDefinition :valueQuantity :valueCount :valueString
      :valueRatio :valueBoolean :valueInstant :valueDateTime :valueDate
      :valueDuration :valueDataRequirement :valueMeta :valueMoney
      :valueCoding :valueExpression :valueSampledData :valueDosage
      :valueContactPoint :valueCodeableConcept :valueAnnotation
      :valuePeriod :valueDistance :valueRange :valueSignature
      :valueUuid :valueInteger :valueHumanName :valueUnsignedInt
      :valueAttachment :valueOid :valueAddress :valueRelatedArtifact
      :valuePositiveInt :valueId :valueUrl}}},
 PractitionerRole.extension:qualification.extension
 {:minItems 2,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms #{PractitionerRole.extension:qualification.extension.*}},
  :slicing
  {:slices
   {"period"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen
      {:confirms
       #{PractitionerRole.extension:qualification.extension:period.*}}},
     :schema
     {:confirms
      #{PractitionerRole.extension:qualification.extension:period}}},
    "code"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen
      {:confirms
       #{PractitionerRole.extension:qualification.extension:code.*}}},
     :schema
     {:confirms
      #{PractitionerRole.extension:qualification.extension:code}}},
    "whereValid"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen
      {:confirms
       #{PractitionerRole.extension:qualification.extension:whereValid.*}}},
     :schema
     {:confirms
      #{PractitionerRole.extension:qualification.extension:whereValid}}},
    "identifier"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen
      {:confirms
       #{PractitionerRole.extension:qualification.extension:identifier.*}}},
     :schema
     {:confirms
      #{PractitionerRole.extension:qualification.extension:identifier}}},
    "issuer"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen
      {:confirms
       #{PractitionerRole.extension:qualification.extension:issuer.*}}},
     :schema
     {:confirms
      #{PractitionerRole.extension:qualification.extension:issuer}}},
    "status"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen
      {:confirms
       #{PractitionerRole.extension:qualification.extension:status.*}}},
     :schema
     {:confirms
      #{PractitionerRole.extension:qualification.extension:status}}}}}},
 PractitionerRole.extension:qualification.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc "An Extension"},
 PractitionerRole.extension:qualification.extension:code
 {:minItems 1,
  :maxItems 1,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:code.*}}},
 PractitionerRole.extension:qualification.extension:code.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :require #{#{:valueCodeableConcept} :url},
  :type zen/map,
  :zen/desc "An Extension",
  :keys
  {:extension
   {:confirms
    #{PractitionerRole.extension:qualification.extension:code.extension}},
   :id
   {:confirms
    #{PractitionerRole.extension:qualification.extension:code.id}},
   :url
   {:confirms
    #{PractitionerRole.extension:qualification.extension:code.url}},
   :valueCodeableConcept {:confirms #{fhir/CodeableConcept}}}},
 PractitionerRole.extension:qualification.extension:code.extension
 {:maxItems 0,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:code.extension.*}},
  :slicing {:slices {}}},
 PractitionerRole.extension:qualification.extension:code.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc "An Extension"},
 PractitionerRole.extension:qualification.extension:code.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.extension:qualification.extension:code.url
 {:confirms #{fhir/uri},
  :zen/tags #{zen/schema},
  :zen/desc
  "Source of the definition for the extension code - a logical name or a URL.",
  :const {:value "code"}},
 PractitionerRole.extension:qualification.extension:identifier
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:identifier.*}}},
 PractitionerRole.extension:qualification.extension:identifier.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :require #{#{:valueIdentifier} :url},
  :type zen/map,
  :zen/desc "An Extension",
  :keys
  {:id
   {:confirms
    #{PractitionerRole.extension:qualification.extension:identifier.id}},
   :url
   {:confirms
    #{PractitionerRole.extension:qualification.extension:identifier.url}},
   :extension
   {:confirms
    #{PractitionerRole.extension:qualification.extension:identifier.extension}},
   :valueIdentifier {:confirms #{fhir/Identifier}}}},
 PractitionerRole.extension:qualification.extension:identifier.extension
 {:maxItems 0,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:identifier.extension.*}},
  :slicing {:slices {}}},
 PractitionerRole.extension:qualification.extension:identifier.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc "An Extension"},
 PractitionerRole.extension:qualification.extension:identifier.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.extension:qualification.extension:identifier.url
 {:confirms #{fhir/uri},
  :zen/tags #{zen/schema},
  :zen/desc
  "Source of the definition for the extension code - a logical name or a URL.",
  :const {:value "identifier"}},
 PractitionerRole.extension:qualification.extension:issuer
 {:maxItems 1,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:issuer.*}}},
 PractitionerRole.extension:qualification.extension:issuer.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :require #{:url #{:valueReference}},
  :type zen/map,
  :zen/desc "An Extension",
  :keys
  {:url
   {:confirms
    #{PractitionerRole.extension:qualification.extension:issuer.url}},
   :extension
   {:confirms
    #{PractitionerRole.extension:qualification.extension:issuer.extension}},
   :id
   {:confirms
    #{PractitionerRole.extension:qualification.extension:issuer.id}},
   :valueReference {:confirms #{fhir/Reference}}}},
 PractitionerRole.extension:qualification.extension:issuer.extension
 {:maxItems 0,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:issuer.extension.*}},
  :slicing {:slices {}}},
 PractitionerRole.extension:qualification.extension:issuer.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc "An Extension"},
 PractitionerRole.extension:qualification.extension:issuer.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.extension:qualification.extension:issuer.url
 {:confirms #{fhir/uri},
  :zen/tags #{zen/schema},
  :zen/desc
  "Source of the definition for the extension code - a logical name or a URL.",
  :const {:value "issuer"}},
 PractitionerRole.extension:qualification.extension:period
 {:maxItems 1,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:period.*}}},
 PractitionerRole.extension:qualification.extension:period.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :require #{:url #{:valuePeriod}},
  :type zen/map,
  :zen/desc "An Extension",
  :keys
  {:url
   {:confirms
    #{PractitionerRole.extension:qualification.extension:period.url}},
   :extension
   {:confirms
    #{PractitionerRole.extension:qualification.extension:period.extension}},
   :id
   {:confirms
    #{PractitionerRole.extension:qualification.extension:period.id}},
   :valuePeriod {:confirms #{fhir/Period}}}},
 PractitionerRole.extension:qualification.extension:period.extension
 {:maxItems 0,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:period.extension.*}},
  :slicing {:slices {}}},
 PractitionerRole.extension:qualification.extension:period.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc "An Extension"},
 PractitionerRole.extension:qualification.extension:period.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.extension:qualification.extension:period.url
 {:confirms #{fhir/uri},
  :zen/tags #{zen/schema},
  :zen/desc
  "Source of the definition for the extension code - a logical name or a URL.",
  :const {:value "period"}},
 PractitionerRole.extension:qualification.extension:status
 {:minItems 1,
  :maxItems 1,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:status.*}}},
 PractitionerRole.extension:qualification.extension:status.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :require #{:valueCode #{:valueCode} :url},
  :type zen/map,
  :zen/desc "An Extension",
  :keys
  {:valueCode
   {:confirms
    #{fhir/code
      PractitionerRole.extension:qualification.extension:status.valueCode}},
   :extension
   {:confirms
    #{PractitionerRole.extension:qualification.extension:status.extension}},
   :id
   {:confirms
    #{PractitionerRole.extension:qualification.extension:status.id}},
   :url
   {:confirms
    #{PractitionerRole.extension:qualification.extension:status.url}}}},
 PractitionerRole.extension:qualification.extension:status.extension
 {:maxItems 0,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:status.extension.*}},
  :slicing {:slices {}}},
 PractitionerRole.extension:qualification.extension:status.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc "An Extension"},
 PractitionerRole.extension:qualification.extension:status.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.extension:qualification.extension:status.url
 {:confirms #{fhir/uri},
  :zen/tags #{zen/schema},
  :zen/desc
  "Source of the definition for the extension code - a logical name or a URL.",
  :const {:value "status"}},
 PractitionerRole.extension:qualification.extension:status.valueCode
 {aidbox-fx/valueset
  PractitionerRole.extension:qualification.extension:status.valueCode.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc
  "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
  :const {:value "active"}},
 PractitionerRole.extension:qualification.extension:status.valueCode.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url
  "http://hl7.org/fhir/us/davinci-pdex-plan-net/ValueSet/QualificationStatusVS"},
 PractitionerRole.extension:qualification.extension:whereValid
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:whereValid.*}}},
 PractitionerRole.extension:qualification.extension:whereValid.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :require #{#{:valueReference :valueCodeableConcept} :url},
  :type zen/map,
  :zen/desc "An Extension",
  :keys
  {:extension
   {:confirms
    #{PractitionerRole.extension:qualification.extension:whereValid.extension}},
   :url
   {:confirms
    #{PractitionerRole.extension:qualification.extension:whereValid.url}},
   :id
   {:confirms
    #{PractitionerRole.extension:qualification.extension:whereValid.id}},
   :valueCodeableConcept {:confirms #{fhir/CodeableConcept}},
   :valueReference {:confirms #{fhir/Reference}}},
  :exclusive-keys #{#{:valueReference :valueCodeableConcept}}},
 PractitionerRole.extension:qualification.extension:whereValid.extension
 {:maxItems 0,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.extension:qualification.extension:whereValid.extension.*}},
  :slicing {:slices {}}},
 PractitionerRole.extension:qualification.extension:whereValid.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc "An Extension"},
 PractitionerRole.extension:qualification.extension:whereValid.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.extension:qualification.extension:whereValid.url
 {:confirms #{fhir/uri},
  :zen/tags #{zen/schema},
  :zen/desc
  "Source of the definition for the extension code - a logical name or a URL.",
  :const {:value "whereValid"}},
 PractitionerRole.extension:qualification.extension:whereValid.value_x_.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url
  "http://hl7.org/fhir/us/core/ValueSet/us-core-usps-state"},
 PractitionerRole.extension:qualification.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.extension:qualification.url
 {:confirms #{fhir/uri},
  :zen/tags #{zen/schema},
  :zen/desc
  "Source of the definition for the extension code - a logical name or a URL.",
  :const
  {:value
   "http://hl7.org/fhir/us/davinci-pdex-plan-net/StructureDefinition/qualification"}},
 PractitionerRole.healthcareService
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.healthcareService.*}}},
 PractitionerRole.healthcareService.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "The list of healthcare services that this worker provides for this role's Organization/Location(s)."},
 PractitionerRole.id
 {:zen/desc
  "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.identifier
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.identifier.*}}},
 PractitionerRole.identifier.*
 {:confirms #{fhir/Identifier},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc
  "Business Identifiers that are specific to a role/location.",
  :keys
  {:use {:confirms #{PractitionerRole.identifier.use}},
   :period {:confirms #{PractitionerRole.identifier.period}},
   :id {:confirms #{PractitionerRole.identifier.id}},
   :type {:confirms #{PractitionerRole.identifier.type}},
   :extension {:confirms #{PractitionerRole.identifier.extension}},
   :assigner {:confirms #{PractitionerRole.identifier.assigner}},
   :value {:confirms #{PractitionerRole.identifier.value}},
   :system {:confirms #{PractitionerRole.identifier.system}}}},
 PractitionerRole.identifier.assigner
 {:zen/desc "Organization that issued/manages the identifier.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 PractitionerRole.identifier.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.identifier.extension.*}},
  :slicing {:slices {}}},
 PractitionerRole.identifier.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 PractitionerRole.identifier.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.identifier.period
 {:zen/desc
  "Time period during which identifier is/was valid for use.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Period}},
 PractitionerRole.identifier.system
 {:zen/desc
  "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/uri}},
 PractitionerRole.identifier.type
 {:zen/desc
  "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/CodeableConcept}},
 PractitionerRole.identifier.use
 {aidbox-fx/valueset PractitionerRole.identifier.use.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc "The purpose of this identifier."},
 PractitionerRole.identifier.use.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url "http://hl7.org/fhir/ValueSet/identifier-use"},
 PractitionerRole.identifier.value
 {:zen/desc
  "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.implicitRules
 {:zen/desc
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/uri}},
 PractitionerRole.language
 {:zen/desc "The base language in which the resource is written.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/code}},
 PractitionerRole.location
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.location.*}}},
 PractitionerRole.location.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "The location(s) at which this practitioner provides care."},
 PractitionerRole.meta
 {:confirms #{fhir/Meta},
  :zen/tags #{zen/schema},
  :require #{:lastUpdated},
  :type zen/map,
  :zen/desc
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
  :keys
  {:source {:confirms #{PractitionerRole.meta.source}},
   :extension {:confirms #{PractitionerRole.meta.extension}},
   :lastUpdated {:confirms #{PractitionerRole.meta.lastUpdated}},
   :versionId {:confirms #{PractitionerRole.meta.versionId}},
   :profile {:confirms #{PractitionerRole.meta.profile}},
   :tag {:confirms #{PractitionerRole.meta.tag}},
   :security {:confirms #{PractitionerRole.meta.security}},
   :id {:confirms #{PractitionerRole.meta.id}}}},
 PractitionerRole.meta.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.meta.extension.*}},
  :slicing {:slices {}}},
 PractitionerRole.meta.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 PractitionerRole.meta.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.meta.lastUpdated
 {:zen/desc
  "When the resource last changed - e.g. when the version changed.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/instant}},
 PractitionerRole.meta.profile
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.meta.profile.*}}},
 PractitionerRole.meta.profile.*
 {:confirms #{fhir/canonical},
  :zen/tags #{zen/schema},
  :zen/desc
  "A list of profiles (references to [StructureDefinition](http://hl7.org/fhir/R4/structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](http://hl7.org/fhir/R4/structuredefinition-definitions.html#StructureDefinition.url)."},
 PractitionerRole.meta.security
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.meta.security.*}}},
 PractitionerRole.meta.security.*
 {:confirms #{fhir/Coding},
  :zen/tags #{zen/schema},
  :zen/desc
  "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure."},
 PractitionerRole.meta.source
 {:zen/desc
  "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](http://hl7.org/fhir/R4/provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/uri}},
 PractitionerRole.meta.tag
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.meta.tag.*}}},
 PractitionerRole.meta.tag.*
 {:confirms #{fhir/Coding},
  :zen/tags #{zen/schema},
  :zen/desc
  "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource."},
 PractitionerRole.meta.versionId
 {:zen/desc
  "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/id}},
 PractitionerRole.modifierExtension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.modifierExtension.*}}},
 PractitionerRole.modifierExtension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."},
 PractitionerRole.notAvailable
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.notAvailable.*}}},
 PractitionerRole.notAvailable.*
 {:confirms #{fhir/BackboneElement},
  :zen/tags #{zen/schema},
  :require #{:description},
  :type zen/map,
  :zen/desc
  "The practitioner is not available or performing this role during this period of time due to the provided reason.",
  :keys
  {:modifierExtension
   {:confirms #{PractitionerRole.notAvailable.modifierExtension}},
   :description
   {:confirms #{PractitionerRole.notAvailable.description}},
   :extension {:confirms #{PractitionerRole.notAvailable.extension}},
   :id {:confirms #{PractitionerRole.notAvailable.id}},
   :during {:confirms #{PractitionerRole.notAvailable.during}}}},
 PractitionerRole.notAvailable.description
 {:zen/desc
  "The reason that can be presented to the user as to why this time is not available.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.notAvailable.during
 {:zen/desc
  "Service is not available (seasonally or for a public holiday) from this date.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Period}},
 PractitionerRole.notAvailable.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.notAvailable.extension.*}}},
 PractitionerRole.notAvailable.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 PractitionerRole.notAvailable.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.notAvailable.modifierExtension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms #{PractitionerRole.notAvailable.modifierExtension.*}}},
 PractitionerRole.notAvailable.modifierExtension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."},
 PractitionerRole.organization
 {:zen/desc
  "The organization where the Practitioner performs the roles associated.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 PractitionerRole.period
 {:zen/desc
  "The period during which the person is authorized to act as a practitioner in these role(s) for the organization.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Period}},
 PractitionerRole.practitioner
 {:zen/desc
  "Practitioner that is able to provide the defined services for the organization.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 PractitionerRole.specialty
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.specialty.*}}},
 PractitionerRole.specialty.*
 {aidbox-fx/valueset PractitionerRole.specialty.valueset,
  :confirms #{fhir/CodeableConcept},
  :zen/tags #{zen/schema},
  :zen/desc "Specific specialty of the practitioner."},
 PractitionerRole.specialty.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url
  "http://hl7.org/fhir/us/davinci-pdex-plan-net/ValueSet/IndividualAndGroupSpecialtiesVS"},
 PractitionerRole.telecom
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.telecom.*}}},
 PractitionerRole.telecom.*
 {:confirms #{fhir/ContactPoint},
  :zen/tags #{zen/schema},
  :require #{:system :value},
  :type zen/map,
  :zen/desc
  "Contact details that are specific to the role/location/service.",
  :keys
  {:extension {:confirms #{PractitionerRole.telecom.extension}},
   :rank {:confirms #{PractitionerRole.telecom.rank}},
   :use {:confirms #{PractitionerRole.telecom.use}},
   :id {:confirms #{PractitionerRole.telecom.id}},
   :period {:confirms #{PractitionerRole.telecom.period}},
   :system {:confirms #{PractitionerRole.telecom.system}},
   :value {:confirms #{PractitionerRole.telecom.value}}}},
 PractitionerRole.telecom.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{PractitionerRole.telecom.extension.*}},
  :slicing
  {:slices
   {"via-intermediary"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen
      {:confirms
       #{PractitionerRole.telecom.extension:via-intermediary.*}}},
     :schema
     {:confirms
      #{PractitionerRole.telecom.extension:via-intermediary}}},
    "contactpoint-availabletime"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen
      {:confirms
       #{PractitionerRole.telecom.extension:contactpoint-availabletime.*}}},
     :schema
     {:confirms
      #{PractitionerRole.telecom.extension:contactpoint-availabletime}}}}}},
 PractitionerRole.telecom.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 PractitionerRole.telecom.extension:contactpoint-availabletime
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.telecom.extension:contactpoint-availabletime.*}}},
 PractitionerRole.telecom.extension:contactpoint-availabletime.*
 {:confirms #{plan-net.v1.contactpoint-availabletime/Extension},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc "Optional Extension Element - found in all resources."},
 PractitionerRole.telecom.extension:via-intermediary
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{PractitionerRole.telecom.extension:via-intermediary.*}}},
 PractitionerRole.telecom.extension:via-intermediary.*
 {:confirms #{plan-net.v1.via-intermediary/Extension},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc "Optional Extension Element - found in all resources."},
 PractitionerRole.telecom.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.telecom.period
 {:zen/desc "Time period when the contact point was/is in use.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Period}},
 PractitionerRole.telecom.rank
 {:zen/desc
  "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/positiveInt}},
 PractitionerRole.telecom.system
 {aidbox-fx/valueset PractitionerRole.telecom.system.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc
  "Telecommunications form for contact point - what communications system is required to make use of the contact."},
 PractitionerRole.telecom.system.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url "http://hl7.org/fhir/ValueSet/contact-point-system"},
 PractitionerRole.telecom.use
 {aidbox-fx/valueset PractitionerRole.telecom.use.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc "Identifies the purpose for the contact point."},
 PractitionerRole.telecom.use.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url "http://hl7.org/fhir/ValueSet/contact-point-use"},
 PractitionerRole.telecom.value
 {:zen/desc
  "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address).",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 PractitionerRole.text
 {:zen/desc
  "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Narrative}}}