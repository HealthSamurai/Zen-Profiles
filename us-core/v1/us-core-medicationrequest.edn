{ns us-core.v1.us-core-medicationrequest,
 import #{aidbox-fx fhir aidbox},
 MedicationRequest
 {:format :fhir,
  :zen/tags #{zen/schema aidbox/profile},
  :require
  #{#{:medicationCodeableConcept :medicationReference} :authoredOn
    :requester :status :intent :subject},
  :type zen/map,
  :zen/desc
  "Defines constraints and extensions on the MedicationRequest resource for the minimal set of data to query and retrieve prescription information.",
  :resourceType "MedicationRequest",
  :keys
  {:performerType {:confirms #{MedicationRequest.performerType}},
   :category {:confirms #{MedicationRequest.category}},
   :insurance {:confirms #{MedicationRequest.insurance}},
   :instantiatesCanonical
   {:confirms #{MedicationRequest.instantiatesCanonical}},
   :eventHistory {:confirms #{MedicationRequest.eventHistory}},
   :meta {:confirms #{MedicationRequest.meta}},
   :instantiatesUri {:confirms #{MedicationRequest.instantiatesUri}},
   :substitution {:confirms #{MedicationRequest.substitution}},
   :detectedIssue {:confirms #{MedicationRequest.detectedIssue}},
   :encounter {:confirms #{MedicationRequest.encounter}},
   :dispenseRequest {:confirms #{MedicationRequest.dispenseRequest}},
   :implicitRules {:confirms #{MedicationRequest.implicitRules}},
   :reasonCode {:confirms #{MedicationRequest.reasonCode}},
   :medicationCodeableConcept {:confirms #{fhir/CodeableConcept}},
   :statusReason {:confirms #{MedicationRequest.statusReason}},
   :authoredOn {:confirms #{MedicationRequest.authoredOn}},
   :resourceType
   {:type zen/string, :const {:value "MedicationRequest"}},
   :note {:confirms #{MedicationRequest.note}},
   :extension {:confirms #{MedicationRequest.extension}},
   :contained {:confirms #{MedicationRequest.contained}},
   :requester {:confirms #{MedicationRequest.requester}},
   :supportingInformation
   {:confirms #{MedicationRequest.supportingInformation}},
   :reportedReference {:confirms #{fhir/Reference}},
   :priority {:confirms #{MedicationRequest.priority}},
   :status {:confirms #{MedicationRequest.status}},
   :language {:confirms #{MedicationRequest.language}},
   :id {:confirms #{MedicationRequest.id}},
   :dosageInstruction
   {:confirms #{MedicationRequest.dosageInstruction}},
   :groupIdentifier {:confirms #{MedicationRequest.groupIdentifier}},
   :recorder {:confirms #{MedicationRequest.recorder}},
   :reportedBoolean {:confirms #{fhir/boolean}},
   :identifier {:confirms #{MedicationRequest.identifier}},
   :doNotPerform {:confirms #{MedicationRequest.doNotPerform}},
   :intent {:confirms #{MedicationRequest.intent}},
   :basedOn {:confirms #{MedicationRequest.basedOn}},
   :priorPrescription
   {:confirms #{MedicationRequest.priorPrescription}},
   :medicationReference {:confirms #{fhir/Reference}},
   :courseOfTherapyType
   {:confirms #{MedicationRequest.courseOfTherapyType}},
   :subject {:confirms #{MedicationRequest.subject}},
   :modifierExtension
   {:confirms #{MedicationRequest.modifierExtension}},
   :performer {:confirms #{MedicationRequest.performer}},
   :reasonReference {:confirms #{MedicationRequest.reasonReference}},
   :text {:confirms #{MedicationRequest.text}}},
  :exclusive-keys
  #{#{:medicationCodeableConcept :medicationReference}
    #{:reportedReference :reportedBoolean}},
  :severity "supported",
  :validation-type :open,
  :profile-definition
  "http://hl7.org/fhir/us/core/StructureDefinition/us-core-medicationrequest"},
 MedicationRequest.authoredOn
 {:zen/desc
  "The date (and perhaps time) when the prescription was initially written or authored on.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/dateTime}},
 MedicationRequest.basedOn
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.basedOn.*}}},
 MedicationRequest.basedOn.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "A plan or request that is fulfilled in whole or in part by this medication request."},
 MedicationRequest.category
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.category.*}}},
 MedicationRequest.category.*
 {:confirms #{fhir/CodeableConcept},
  :zen/tags #{zen/schema},
  :zen/desc
  "Indicates the type of medication request (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient))."},
 MedicationRequest.contained
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.contained.*}}},
 MedicationRequest.contained.*
 {:confirms #{fhir/Resource},
  :zen/tags #{zen/schema},
  :zen/desc
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."},
 MedicationRequest.courseOfTherapyType
 {:zen/desc
  "The description of the overall patte3rn of the administration of the medication to the patient.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/CodeableConcept}},
 MedicationRequest.detectedIssue
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.detectedIssue.*}}},
 MedicationRequest.detectedIssue.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, duplicate therapy, dosage alert etc."},
 MedicationRequest.dispenseRequest
 {:confirms #{fhir/BackboneElement},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc
  "Indicates the specific details for the dispense or medication supply part of a medication request (also known as a Medication Prescription or Medication Order).  Note that this information is not always sent with the order.  There may be in some settings (e.g. hospitals) institutional or system support for completing the dispense details in the pharmacy department.",
  :keys
  {:initialFill
   {:confirms #{MedicationRequest.dispenseRequest.initialFill}},
   :dispenseInterval
   {:confirms #{MedicationRequest.dispenseRequest.dispenseInterval}},
   :validityPeriod
   {:confirms #{MedicationRequest.dispenseRequest.validityPeriod}},
   :extension
   {:confirms #{MedicationRequest.dispenseRequest.extension}},
   :id {:confirms #{MedicationRequest.dispenseRequest.id}},
   :numberOfRepeatsAllowed
   {:confirms
    #{MedicationRequest.dispenseRequest.numberOfRepeatsAllowed}},
   :quantity {:confirms #{MedicationRequest.dispenseRequest.quantity}},
   :expectedSupplyDuration
   {:confirms
    #{MedicationRequest.dispenseRequest.expectedSupplyDuration}},
   :modifierExtension
   {:confirms #{MedicationRequest.dispenseRequest.modifierExtension}},
   :performer
   {:confirms #{MedicationRequest.dispenseRequest.performer}}}},
 MedicationRequest.dispenseRequest.dispenseInterval
 {:zen/desc
  "The minimum period of time that must occur between dispenses of the medication.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Duration}},
 MedicationRequest.dispenseRequest.expectedSupplyDuration
 {:zen/desc
  "Identifies the period time over which the supplied product is expected to be used, or the length of time the dispense is expected to last.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Duration}},
 MedicationRequest.dispenseRequest.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.dispenseRequest.extension.*}}},
 MedicationRequest.dispenseRequest.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 MedicationRequest.dispenseRequest.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 MedicationRequest.dispenseRequest.initialFill
 {:confirms #{fhir/BackboneElement},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc
  "Indicates the quantity or duration for the first dispense of the medication.",
  :keys
  {:id {:confirms #{MedicationRequest.dispenseRequest.initialFill.id}},
   :duration
   {:confirms
    #{MedicationRequest.dispenseRequest.initialFill.duration}},
   :quantity
   {:confirms
    #{MedicationRequest.dispenseRequest.initialFill.quantity}},
   :extension
   {:confirms
    #{MedicationRequest.dispenseRequest.initialFill.extension}},
   :modifierExtension
   {:confirms
    #{MedicationRequest.dispenseRequest.initialFill.modifierExtension}}}},
 MedicationRequest.dispenseRequest.initialFill.duration
 {:zen/desc
  "The length of time that the first dispense is expected to last.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Duration}},
 MedicationRequest.dispenseRequest.initialFill.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{MedicationRequest.dispenseRequest.initialFill.extension.*}}},
 MedicationRequest.dispenseRequest.initialFill.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 MedicationRequest.dispenseRequest.initialFill.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 MedicationRequest.dispenseRequest.initialFill.modifierExtension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{MedicationRequest.dispenseRequest.initialFill.modifierExtension.*}}},
 MedicationRequest.dispenseRequest.initialFill.modifierExtension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."},
 MedicationRequest.dispenseRequest.initialFill.quantity
 {:zen/desc
  "The amount or quantity to provide as part of the first dispense.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Quantity}},
 MedicationRequest.dispenseRequest.modifierExtension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{MedicationRequest.dispenseRequest.modifierExtension.*}}},
 MedicationRequest.dispenseRequest.modifierExtension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."},
 MedicationRequest.dispenseRequest.numberOfRepeatsAllowed
 {:zen/desc
  "An integer indicating the number of times, in addition to the original dispense, (aka refills or repeats) that the patient can receive the prescribed medication. Usage Notes: This integer does not include the original order dispense. This means that if an order indicates dispense 30 tablets plus \"3 repeats\", then the order can be dispensed a total of 4 times and the patient can receive a total of 120 tablets.  A prescriber may explicitly say that zero refills are permitted after the initial dispense.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/unsignedInt}},
 MedicationRequest.dispenseRequest.performer
 {:zen/desc
  "Indicates the intended dispensing Organization specified by the prescriber.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 MedicationRequest.dispenseRequest.quantity
 {:zen/desc "The amount that is to be dispensed for one fill.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Quantity}},
 MedicationRequest.dispenseRequest.validityPeriod
 {:zen/desc
  "This indicates the validity period of a prescription (stale dating the Prescription).",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Period}},
 MedicationRequest.doNotPerform
 {:zen/desc
  "If true indicates that the provider is asking for the medication request not to occur.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/boolean}},
 MedicationRequest.dosageInstruction
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.dosageInstruction.*}}},
 MedicationRequest.dosageInstruction.*
 {:confirms #{fhir/Dosage},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc
  "Indicates how the medication is to be used by the patient.",
  :keys
  {:site {:confirms #{MedicationRequest.dosageInstruction.site}},
   :method {:confirms #{MedicationRequest.dosageInstruction.method}},
   :patientInstruction
   {:confirms
    #{MedicationRequest.dosageInstruction.patientInstruction}},
   :maxDosePerLifetime
   {:confirms
    #{MedicationRequest.dosageInstruction.maxDosePerLifetime}},
   :maxDosePerAdministration
   {:confirms
    #{MedicationRequest.dosageInstruction.maxDosePerAdministration}},
   :route {:confirms #{MedicationRequest.dosageInstruction.route}},
   :asNeededBoolean {:confirms #{fhir/boolean}},
   :extension
   {:confirms #{MedicationRequest.dosageInstruction.extension}},
   :id {:confirms #{MedicationRequest.dosageInstruction.id}},
   :timing {:confirms #{MedicationRequest.dosageInstruction.timing}},
   :additionalInstruction
   {:confirms
    #{MedicationRequest.dosageInstruction.additionalInstruction}},
   :sequence
   {:confirms #{MedicationRequest.dosageInstruction.sequence}},
   :maxDosePerPeriod
   {:confirms #{MedicationRequest.dosageInstruction.maxDosePerPeriod}},
   :doseAndRate
   {:confirms #{MedicationRequest.dosageInstruction.doseAndRate}},
   :modifierExtension
   {:confirms
    #{MedicationRequest.dosageInstruction.modifierExtension}},
   :asNeededCodeableConcept {:confirms #{fhir/CodeableConcept}},
   :text {:confirms #{MedicationRequest.dosageInstruction.text}}},
  :exclusive-keys #{#{:asNeededBoolean :asNeededCodeableConcept}}},
 MedicationRequest.dosageInstruction.additionalInstruction
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{MedicationRequest.dosageInstruction.additionalInstruction.*}}},
 MedicationRequest.dosageInstruction.additionalInstruction.*
 {:confirms #{fhir/CodeableConcept},
  :zen/tags #{zen/schema},
  :zen/desc
  "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\")."},
 MedicationRequest.dosageInstruction.doseAndRate
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms #{MedicationRequest.dosageInstruction.doseAndRate.*}}},
 MedicationRequest.dosageInstruction.doseAndRate.*
 {:confirms #{fhir/Element},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc "The amount of medication administered.",
  :keys
  {:type
   {:confirms #{MedicationRequest.dosageInstruction.doseAndRate.type}},
   :extension
   {:confirms
    #{MedicationRequest.dosageInstruction.doseAndRate.extension}},
   :id
   {:confirms #{MedicationRequest.dosageInstruction.doseAndRate.id}},
   :rateRatio {:confirms #{fhir/Ratio}},
   :rateRange {:confirms #{fhir/Range}},
   :rateQuantity {:confirms #{fhir/Quantity}},
   :doseRange {:confirms #{fhir/Range}},
   :doseQuantity {:confirms #{fhir/Quantity}}},
  :exclusive-keys
  #{#{:doseRange :doseQuantity}
    #{:rateRange :rateRatio :rateQuantity}}},
 MedicationRequest.dosageInstruction.doseAndRate.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{MedicationRequest.dosageInstruction.doseAndRate.extension.*}},
  :slicing {:slices {}}},
 MedicationRequest.dosageInstruction.doseAndRate.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 MedicationRequest.dosageInstruction.doseAndRate.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 MedicationRequest.dosageInstruction.doseAndRate.type
 {:zen/desc
  "The kind of dose or rate specified, for example, ordered or calculated.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/CodeableConcept}},
 MedicationRequest.dosageInstruction.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms #{MedicationRequest.dosageInstruction.extension.*}},
  :slicing {:slices {}}},
 MedicationRequest.dosageInstruction.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 MedicationRequest.dosageInstruction.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 MedicationRequest.dosageInstruction.maxDosePerAdministration
 {:zen/desc "Upper limit on medication per administration.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Quantity}},
 MedicationRequest.dosageInstruction.maxDosePerLifetime
 {:zen/desc "Upper limit on medication per lifetime of the patient.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Quantity}},
 MedicationRequest.dosageInstruction.maxDosePerPeriod
 {:zen/desc "Upper limit on medication per unit of time.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Ratio}},
 MedicationRequest.dosageInstruction.method
 {:zen/desc "Technique for administering medication.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/CodeableConcept}},
 MedicationRequest.dosageInstruction.modifierExtension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms
   #{MedicationRequest.dosageInstruction.modifierExtension.*}}},
 MedicationRequest.dosageInstruction.modifierExtension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."},
 MedicationRequest.dosageInstruction.patientInstruction
 {:zen/desc
  "Instructions in terms that are understood by the patient or consumer.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 MedicationRequest.dosageInstruction.route
 {:zen/desc "How drug should enter body.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/CodeableConcept}},
 MedicationRequest.dosageInstruction.sequence
 {:zen/desc
  "Indicates the order in which the dosage instructions should be applied or interpreted.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/integer}},
 MedicationRequest.dosageInstruction.site
 {:zen/desc "Body site to administer to.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/CodeableConcept}},
 MedicationRequest.dosageInstruction.text
 {:zen/desc "Free text dosage instructions e.g. SIG.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 MedicationRequest.dosageInstruction.timing
 {:zen/desc "When medication should be administered.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Timing}},
 MedicationRequest.encounter
 {:zen/desc
  "The Encounter during which this [x] was created or to which the creation of this record is tightly associated.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 MedicationRequest.eventHistory
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.eventHistory.*}}},
 MedicationRequest.eventHistory.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource."},
 MedicationRequest.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.extension.*}}},
 MedicationRequest.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 MedicationRequest.groupIdentifier
 {:zen/desc
  "A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition or prescription.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Identifier}},
 MedicationRequest.id
 {:zen/desc
  "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 MedicationRequest.identifier
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.identifier.*}}},
 MedicationRequest.identifier.*
 {:confirms #{fhir/Identifier},
  :zen/tags #{zen/schema},
  :zen/desc
  "Identifiers associated with this medication request that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server."},
 MedicationRequest.implicitRules
 {:zen/desc
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/uri}},
 MedicationRequest.instantiatesCanonical
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.instantiatesCanonical.*}}},
 MedicationRequest.instantiatesCanonical.*
 {:confirms #{fhir/canonical},
  :zen/tags #{zen/schema},
  :zen/desc
  "The URL pointing to a protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this MedicationRequest."},
 MedicationRequest.instantiatesUri
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.instantiatesUri.*}}},
 MedicationRequest.instantiatesUri.*
 {:confirms #{fhir/uri},
  :zen/tags #{zen/schema},
  :zen/desc
  "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this MedicationRequest."},
 MedicationRequest.insurance
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.insurance.*}}},
 MedicationRequest.insurance.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service."},
 MedicationRequest.intent
 {aidbox-fx/valueset MedicationRequest.intent.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc
  "Whether the request is a proposal, plan, or an original order."},
 MedicationRequest.intent.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url
  "http://hl7.org/fhir/ValueSet/medicationrequest-intent"},
 MedicationRequest.language
 {:zen/desc "The base language in which the resource is written.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/code}},
 MedicationRequest.meta
 {:zen/desc
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Meta}},
 MedicationRequest.modifierExtension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.modifierExtension.*}}},
 MedicationRequest.modifierExtension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."},
 MedicationRequest.note
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.note.*}}},
 MedicationRequest.note.*
 {:confirms #{fhir/Annotation},
  :zen/tags #{zen/schema},
  :zen/desc
  "Extra information about the prescription that could not be conveyed by the other attributes."},
 MedicationRequest.performer
 {:zen/desc
  "The specified desired performer of the medication treatment (e.g. the performer of the medication administration).",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 MedicationRequest.performerType
 {:zen/desc
  "Indicates the type of performer of the administration of the medication.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/CodeableConcept}},
 MedicationRequest.priorPrescription
 {:zen/desc
  "A link to a resource representing an earlier order related order or prescription.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 MedicationRequest.priority
 {aidbox-fx/valueset MedicationRequest.priority.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc
  "Indicates how quickly the Medication Request should be addressed with respect to other requests."},
 MedicationRequest.priority.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url "http://hl7.org/fhir/ValueSet/request-priority"},
 MedicationRequest.reasonCode
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.reasonCode.*}}},
 MedicationRequest.reasonCode.*
 {:confirms #{fhir/CodeableConcept},
  :zen/tags #{zen/schema},
  :zen/desc
  "The reason or the indication for ordering or not ordering the medication."},
 MedicationRequest.reasonReference
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.reasonReference.*}}},
 MedicationRequest.reasonReference.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Condition or observation that supports why the medication was ordered."},
 MedicationRequest.recorder
 {:zen/desc
  "The person who entered the order on behalf of another individual for example in the case of a verbal or a telephone order.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 MedicationRequest.requester
 {:zen/desc
  "The individual, organization, or device that initiated the request and has responsibility for its activation.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 MedicationRequest.status
 {aidbox-fx/valueset MedicationRequest.status.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc
  "A code specifying the current state of the order.  Generally, this will be active or completed state."},
 MedicationRequest.status.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url
  "http://hl7.org/fhir/ValueSet/medicationrequest-status"},
 MedicationRequest.statusReason
 {:zen/desc
  "Captures the reason for the current state of the MedicationRequest.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/CodeableConcept}},
 MedicationRequest.subject
 {:zen/desc
  "A link to a resource representing the person or set of individuals to whom the medication will be given.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 MedicationRequest.substitution
 {:confirms #{fhir/BackboneElement},
  :zen/tags #{zen/schema},
  :require #{#{:allowedBoolean :allowedCodeableConcept}},
  :type zen/map,
  :zen/desc
  "Indicates whether or not substitution can or should be part of the dispense. In some cases, substitution must happen, in other cases substitution must not happen. This block explains the prescriber's intent. If nothing is specified substitution may be done.",
  :keys
  {:extension {:confirms #{MedicationRequest.substitution.extension}},
   :id {:confirms #{MedicationRequest.substitution.id}},
   :modifierExtension
   {:confirms #{MedicationRequest.substitution.modifierExtension}},
   :reason {:confirms #{MedicationRequest.substitution.reason}},
   :allowedBoolean {:confirms #{fhir/boolean}},
   :allowedCodeableConcept {:confirms #{fhir/CodeableConcept}}},
  :exclusive-keys #{#{:allowedBoolean :allowedCodeableConcept}}},
 MedicationRequest.substitution.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.substitution.extension.*}}},
 MedicationRequest.substitution.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 MedicationRequest.substitution.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 MedicationRequest.substitution.modifierExtension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms #{MedicationRequest.substitution.modifierExtension.*}}},
 MedicationRequest.substitution.modifierExtension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."},
 MedicationRequest.substitution.reason
 {:zen/desc
  "Indicates the reason for the substitution, or why substitution must or must not be performed.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/CodeableConcept}},
 MedicationRequest.supportingInformation
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{MedicationRequest.supportingInformation.*}}},
 MedicationRequest.supportingInformation.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Include additional information (for example, patient height and weight) that supports the ordering of the medication."},
 MedicationRequest.text
 {:zen/desc
  "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Narrative}}}