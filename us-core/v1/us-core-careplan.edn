{ns us-core.v1.us-core-careplan,
 import #{aidbox-fx fhir aidbox},
 CarePlan
 {:format :fhir,
  :zen/tags #{zen/schema aidbox/profile},
  :require #{:category :status :intent :subject :text},
  :type zen/map,
  :zen/desc
  "Defines constraints and extensions on the CarePlan resource for the minimal set of data to query and retrieve a patient's Care Plan.",
  :resourceType "CarePlan",
  :keys
  {:description {:confirms #{CarePlan.description}},
   :category {:confirms #{CarePlan.category}},
   :addresses {:confirms #{CarePlan.addresses}},
   :instantiatesCanonical
   {:confirms #{CarePlan.instantiatesCanonical}},
   :meta {:confirms #{CarePlan.meta}},
   :instantiatesUri {:confirms #{CarePlan.instantiatesUri}},
   :supportingInfo {:confirms #{CarePlan.supportingInfo}},
   :encounter {:confirms #{CarePlan.encounter}},
   :implicitRules {:confirms #{CarePlan.implicitRules}},
   :goal {:confirms #{CarePlan.goal}},
   :created {:confirms #{CarePlan.created}},
   :resourceType {:type zen/string, :const {:value "CarePlan"}},
   :title {:confirms #{CarePlan.title}},
   :note {:confirms #{CarePlan.note}},
   :author {:confirms #{CarePlan.author}},
   :activity {:confirms #{CarePlan.activity}},
   :extension {:confirms #{CarePlan.extension}},
   :contained {:confirms #{CarePlan.contained}},
   :contributor {:confirms #{CarePlan.contributor}},
   :status {:confirms #{CarePlan.status}},
   :language {:confirms #{CarePlan.language}},
   :id {:confirms #{CarePlan.id}},
   :identifier {:confirms #{CarePlan.identifier}},
   :intent {:confirms #{CarePlan.intent}},
   :replaces {:confirms #{CarePlan.replaces}},
   :period {:confirms #{CarePlan.period}},
   :basedOn {:confirms #{CarePlan.basedOn}},
   :partOf {:confirms #{CarePlan.partOf}},
   :subject {:confirms #{CarePlan.subject}},
   :modifierExtension {:confirms #{CarePlan.modifierExtension}},
   :careTeam {:confirms #{CarePlan.careTeam}},
   :text {:confirms #{CarePlan.text}}},
  :severity "supported",
  :validation-type :open,
  :profile-definition
  "http://hl7.org/fhir/us/core/StructureDefinition/us-core-careplan"},
 CarePlan.activity
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.*}}},
 CarePlan.activity.*
 {:confirms #{fhir/BackboneElement},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc
  "Identifies a planned action to occur as part of the plan.  For example, a medication to be used, lab tests to perform, self-monitoring, education, etc.",
  :keys
  {:modifierExtension
   {:confirms #{CarePlan.activity.modifierExtension}},
   :outcomeCodeableConcept
   {:confirms #{CarePlan.activity.outcomeCodeableConcept}},
   :id {:confirms #{CarePlan.activity.id}},
   :outcomeReference {:confirms #{CarePlan.activity.outcomeReference}},
   :extension {:confirms #{CarePlan.activity.extension}},
   :progress {:confirms #{CarePlan.activity.progress}},
   :reference {:confirms #{CarePlan.activity.reference}},
   :detail {:confirms #{CarePlan.activity.detail}}}},
 CarePlan.activity.detail
 {:confirms #{fhir/BackboneElement},
  :zen/tags #{zen/schema},
  :require #{:status},
  :type zen/map,
  :zen/desc
  "A simple summary of a planned activity suitable for a general care plan system (e.g. form driven) that doesn't know about specific resources such as procedure etc.",
  :keys
  {:description {:confirms #{CarePlan.activity.detail.description}},
   :instantiatesCanonical
   {:confirms #{CarePlan.activity.detail.instantiatesCanonical}},
   :instantiatesUri
   {:confirms #{CarePlan.activity.detail.instantiatesUri}},
   :productCodeableConcept {:confirms #{fhir/CodeableConcept}},
   :productReference {:confirms #{fhir/Reference}},
   :scheduledPeriod {:confirms #{fhir/Period}},
   :goal {:confirms #{CarePlan.activity.detail.goal}},
   :reasonCode {:confirms #{CarePlan.activity.detail.reasonCode}},
   :statusReason {:confirms #{CarePlan.activity.detail.statusReason}},
   :scheduledTiming {:confirms #{fhir/Timing}},
   :dailyAmount {:confirms #{CarePlan.activity.detail.dailyAmount}},
   :extension {:confirms #{CarePlan.activity.detail.extension}},
   :scheduledString {:confirms #{fhir/string}},
   :status {:confirms #{CarePlan.activity.detail.status}},
   :id {:confirms #{CarePlan.activity.detail.id}},
   :kind {:confirms #{CarePlan.activity.detail.kind}},
   :code {:confirms #{CarePlan.activity.detail.code}},
   :doNotPerform {:confirms #{CarePlan.activity.detail.doNotPerform}},
   :quantity {:confirms #{CarePlan.activity.detail.quantity}},
   :location {:confirms #{CarePlan.activity.detail.location}},
   :modifierExtension
   {:confirms #{CarePlan.activity.detail.modifierExtension}},
   :performer {:confirms #{CarePlan.activity.detail.performer}},
   :reasonReference
   {:confirms #{CarePlan.activity.detail.reasonReference}}},
  :exclusive-keys
  #{#{:scheduledPeriod :scheduledTiming :scheduledString}
    #{:productCodeableConcept :productReference}}},
 CarePlan.activity.detail.code
 {:zen/desc
  "Detailed description of the type of planned activity; e.g. what lab test, what procedure, what kind of encounter.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/CodeableConcept}},
 CarePlan.activity.detail.dailyAmount
 {:zen/desc
  "Identifies the quantity expected to be consumed in a given day.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Quantity}},
 CarePlan.activity.detail.description
 {:zen/desc
  "This provides a textual description of constraints on the intended activity occurrence, including relation to other activities.  It may also include objectives, pre-conditions and end-conditions.  Finally, it may convey specifics about the activity such as body site, method, route, etc.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 CarePlan.activity.detail.doNotPerform
 {:zen/desc
  "If true, indicates that the described activity is one that must NOT be engaged in when following the plan.  If false, or missing, indicates that the described activity is one that should be engaged in when following the plan.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/boolean}},
 CarePlan.activity.detail.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.detail.extension.*}}},
 CarePlan.activity.detail.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 CarePlan.activity.detail.goal
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.detail.goal.*}}},
 CarePlan.activity.detail.goal.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Internal reference that identifies the goals that this activity is intended to contribute towards meeting."},
 CarePlan.activity.detail.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 CarePlan.activity.detail.instantiatesCanonical
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every
  {:confirms #{CarePlan.activity.detail.instantiatesCanonical.*}}},
 CarePlan.activity.detail.instantiatesCanonical.*
 {:confirms #{fhir/canonical},
  :zen/tags #{zen/schema},
  :zen/desc
  "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity."},
 CarePlan.activity.detail.instantiatesUri
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.detail.instantiatesUri.*}}},
 CarePlan.activity.detail.instantiatesUri.*
 {:confirms #{fhir/uri},
  :zen/tags #{zen/schema},
  :zen/desc
  "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity."},
 CarePlan.activity.detail.kind
 {aidbox-fx/valueset CarePlan.activity.detail.kind.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc
  "A description of the kind of resource the in-line definition of a care plan activity is representing.  The CarePlan.activity.detail is an in-line definition when a resource is not referenced using CarePlan.activity.reference.  For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest."},
 CarePlan.activity.detail.kind.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url
  "http://hl7.org/fhir/ValueSet/care-plan-activity-kind"},
 CarePlan.activity.detail.location
 {:zen/desc
  "Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 CarePlan.activity.detail.modifierExtension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.detail.modifierExtension.*}}},
 CarePlan.activity.detail.modifierExtension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."},
 CarePlan.activity.detail.performer
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.detail.performer.*}}},
 CarePlan.activity.detail.performer.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Identifies who's expected to be involved in the activity."},
 CarePlan.activity.detail.quantity
 {:zen/desc
  "Identifies the quantity expected to be supplied, administered or consumed by the subject.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Quantity}},
 CarePlan.activity.detail.reasonCode
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.detail.reasonCode.*}}},
 CarePlan.activity.detail.reasonCode.*
 {:confirms #{fhir/CodeableConcept},
  :zen/tags #{zen/schema},
  :zen/desc
  "Provides the rationale that drove the inclusion of this particular activity as part of the plan or the reason why the activity was prohibited."},
 CarePlan.activity.detail.reasonReference
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.detail.reasonReference.*}}},
 CarePlan.activity.detail.reasonReference.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Indicates another resource, such as the health condition(s), whose existence justifies this request and drove the inclusion of this particular activity as part of the plan."},
 CarePlan.activity.detail.status
 {aidbox-fx/valueset CarePlan.activity.detail.status.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc
  "Identifies what progress is being made for the specific activity."},
 CarePlan.activity.detail.status.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url
  "http://hl7.org/fhir/ValueSet/care-plan-activity-status"},
 CarePlan.activity.detail.statusReason
 {:zen/desc
  "Provides reason why the activity isn't yet started, is on hold, was cancelled, etc.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/CodeableConcept}},
 CarePlan.activity.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.extension.*}}},
 CarePlan.activity.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 CarePlan.activity.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 CarePlan.activity.modifierExtension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.modifierExtension.*}}},
 CarePlan.activity.modifierExtension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."},
 CarePlan.activity.outcomeCodeableConcept
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.outcomeCodeableConcept.*}}},
 CarePlan.activity.outcomeCodeableConcept.*
 {:confirms #{fhir/CodeableConcept},
  :zen/tags #{zen/schema},
  :zen/desc
  "Identifies the outcome at the point when the status of the activity is assessed.  For example, the outcome of an education activity could be patient understands (or not)."},
 CarePlan.activity.outcomeReference
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.outcomeReference.*}}},
 CarePlan.activity.outcomeReference.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Details of the outcome or action resulting from the activity.  The reference to an \"event\" resource, such as Procedure or Encounter or Observation, is the result/outcome of the activity itself.  The activity can be conveyed using CarePlan.activity.detail OR using the CarePlan.activity.reference (a reference to a “request” resource)."},
 CarePlan.activity.progress
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.activity.progress.*}}},
 CarePlan.activity.progress.*
 {:confirms #{fhir/Annotation},
  :zen/tags #{zen/schema},
  :zen/desc
  "Notes about the adherence/status/progress of the activity."},
 CarePlan.activity.reference
 {:zen/desc
  "The details of the proposed activity represented in a specific resource.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 CarePlan.addresses
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.addresses.*}}},
 CarePlan.addresses.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Identifies the conditions/problems/concerns/diagnoses/etc. whose management and/or mitigation are handled by this plan."},
 CarePlan.author
 {:zen/desc
  "When populated, the author is responsible for the care plan.  The care plan is attributed to the author.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 CarePlan.basedOn
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.basedOn.*}}},
 CarePlan.basedOn.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "A care plan that is fulfilled in whole or in part by this care plan."},
 CarePlan.careTeam
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.careTeam.*}}},
 CarePlan.careTeam.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Identifies all people and organizations who are expected to be involved in the care envisioned by this plan."},
 CarePlan.category
 {:minItems 1,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.category.*}},
  :slicing
  {:slices
   {"AssessPlan"
    {:filter
     {:engine :proto.zen.core/zen,
      :zen {:confirms #{CarePlan.category:AssessPlan.*}}},
     :schema {:confirms #{CarePlan.category:AssessPlan}}}}}},
 CarePlan.category.*
 {:confirms #{fhir/CodeableConcept},
  :zen/tags #{zen/schema},
  :zen/desc "Type of plan."},
 CarePlan.category:AssessPlan
 {:minItems 1,
  :maxItems 1,
  :zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.category:AssessPlan.*}}},
 CarePlan.category:AssessPlan.*
 {:confirms #{fhir/CodeableConcept},
  :zen/tags #{zen/schema},
  :type zen/map,
  :zen/desc "Type of plan.",
  :keys
  {:coding
   {:type zen/vector,
    :slicing
    {:slices
     {"RESERVED-aidbox-array-pattern-slicing-0"
      {:filter
       {:engine :zen,
        :zen
        {:type zen/map,
         :validation-type :open,
         :keys
         {:system
          {:const
           {:value
            "http://hl7.org/fhir/us/core/CodeSystem/careplan-category"}},
          :code {:const {:value "assess-plan"}}}}},
       :schema {:type zen/vector, :minItems 1}}}}}},
  :validation-type :open},
 CarePlan.contained
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.contained.*}}},
 CarePlan.contained.*
 {:confirms #{fhir/Resource},
  :zen/tags #{zen/schema},
  :zen/desc
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."},
 CarePlan.contributor
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.contributor.*}}},
 CarePlan.contributor.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Identifies the individual(s) or organization who provided the contents of the care plan."},
 CarePlan.created
 {:zen/desc
  "Represents when this particular CarePlan record was created in the system, which is often a system-generated date.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/dateTime}},
 CarePlan.description
 {:zen/desc "A description of the scope and nature of the plan.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 CarePlan.encounter
 {:zen/desc
  "The Encounter during which this CarePlan was created or to which the creation of this record is tightly associated.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 CarePlan.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.extension.*}}},
 CarePlan.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 CarePlan.goal
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.goal.*}}},
 CarePlan.goal.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Describes the intended objective(s) of carrying out the care plan."},
 CarePlan.id
 {:zen/desc
  "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 CarePlan.identifier
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.identifier.*}}},
 CarePlan.identifier.*
 {:confirms #{fhir/Identifier},
  :zen/tags #{zen/schema},
  :zen/desc
  "Business identifiers assigned to this care plan by the performer or other systems which remain constant as the resource is updated and propagates from server to server."},
 CarePlan.implicitRules
 {:zen/desc
  "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/uri}},
 CarePlan.instantiatesCanonical
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.instantiatesCanonical.*}}},
 CarePlan.instantiatesCanonical.*
 {:confirms #{fhir/canonical},
  :zen/tags #{zen/schema},
  :zen/desc
  "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan."},
 CarePlan.instantiatesUri
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.instantiatesUri.*}}},
 CarePlan.instantiatesUri.*
 {:confirms #{fhir/uri},
  :zen/tags #{zen/schema},
  :zen/desc
  "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan."},
 CarePlan.intent
 {aidbox-fx/valueset CarePlan.intent.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc
  "Indicates the level of authority/intentionality associated with the care plan and where the care plan fits into the workflow chain."},
 CarePlan.intent.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url "http://hl7.org/fhir/ValueSet/care-plan-intent"},
 CarePlan.language
 {:zen/desc "The base language in which the resource is written.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/code}},
 CarePlan.meta
 {:zen/desc
  "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Meta}},
 CarePlan.modifierExtension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.modifierExtension.*}}},
 CarePlan.modifierExtension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."},
 CarePlan.note
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.note.*}}},
 CarePlan.note.*
 {:confirms #{fhir/Annotation},
  :zen/tags #{zen/schema},
  :zen/desc
  "General notes about the care plan not covered elsewhere."},
 CarePlan.partOf
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.partOf.*}}},
 CarePlan.partOf.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "A larger care plan of which this particular care plan is a component or step."},
 CarePlan.period
 {:zen/desc
  "Indicates when the plan did (or is intended to) come into effect and end.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Period}},
 CarePlan.replaces
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.replaces.*}}},
 CarePlan.replaces.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Completed or terminated care plan whose function is taken by this new care plan."},
 CarePlan.status
 {aidbox-fx/valueset CarePlan.status.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc
  "Indicates whether the plan is currently being acted upon, represents future intentions or is now a historical record."},
 CarePlan.status.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url "http://hl7.org/fhir/ValueSet/request-status"},
 CarePlan.subject
 {:zen/desc "Who care plan is for.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/Reference}},
 CarePlan.supportingInfo
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.supportingInfo.*}}},
 CarePlan.supportingInfo.*
 {:confirms #{fhir/Reference},
  :zen/tags #{zen/schema},
  :zen/desc
  "Identifies portions of the patient's record that specifically influenced the formation of the plan.  These might include comorbidities, recent procedures, limitations, recent assessments, etc."},
 CarePlan.text
 {:confirms #{fhir/Narrative},
  :zen/tags #{zen/schema},
  :require #{:div :status},
  :type zen/map,
  :zen/desc
  "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
  :keys
  {:id {:confirms #{CarePlan.text.id}},
   :div {:confirms #{CarePlan.text.div}},
   :status {:confirms #{CarePlan.text.status}},
   :extension {:confirms #{CarePlan.text.extension}}}},
 CarePlan.text.div
 {:zen/desc
  "The actual narrative content, a stripped down version of XHTML.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/xhtml}},
 CarePlan.text.extension
 {:zen/tags #{zen/schema},
  :type zen/vector,
  :every {:confirms #{CarePlan.text.extension.*}},
  :slicing {:slices {}}},
 CarePlan.text.extension.*
 {:confirms #{fhir/Extension},
  :zen/tags #{zen/schema},
  :zen/desc
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."},
 CarePlan.text.id
 {:zen/desc
  "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}},
 CarePlan.text.status
 {aidbox-fx/valueset CarePlan.text.status.valueset,
  :confirms #{fhir/code},
  :zen/tags #{zen/schema},
  :zen/desc "generated | additional."},
 CarePlan.text.status.valueset
 {:zen/tags
  #{aidbox-fx/valueset-definition
    aidbox-fx/legacy-fhir-valueset-definition},
  :engine :legacy-fhir-valueset,
  :valueset-url
  "http://hl7.org/fhir/us/core/ValueSet/us-core-narrative-status"},
 CarePlan.title
 {:zen/desc "Human-friendly name for the care plan.",
  :zen/tags #{zen/schema},
  :confirms #{fhir/string}}}